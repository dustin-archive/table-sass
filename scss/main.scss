//
// + Variables
// =============================================================================

$table-padding: 1 !default;
$table-separator: '|' !default;

//
// + Widths
// =============================================================================

@function table-widths($list) {
  $result: ();

  @each $row in $list {
    @for $i from 1 through length($row) {

      // + Make an empty space for each column
      @if length($row) > length($result) {
        $result: join($result, 0);
      }

      // + Update the width if the current string is longer
      $string: nth($row, $i);
      @if str-length($string) > nth($result, $i) {
        $result: set-nth($result, $i, str-length($string));
      }
    }
  }

  @return $result;
}

//
// + String repeat
// =============================================================================

@function table-str-repeat($string, $count) {
  $result: '';

  @if $count < 1 {
    @return $result;
  }

  @for $i from 1 through $count {
    $result: $result + $string;
  }

  @return $result;
}

//
// + Table
// =============================================================================

@function table($list) {
  $result: '\a\a';
  $widths: table-widths($list);
  $padding: table-str-repeat(' ', $table-padding);

  @each $row in $list {
    $result: $result + $table-separator;

    @for $i from 1 through length($row) {
      $cell: nth($row, $i);
      $spaces: table-str-repeat(' ', nth($widths, $i) - str-length($cell));
      $result: $result + $padding + $cell + $spaces + $padding + $table-separator;
    }

    $result: $result + '\a';
  }

  @return $result;
}

//
// + Test
// =============================================================================

// @import 'test';
